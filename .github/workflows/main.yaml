name: Build and Publish .NET Framework App

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: windows-latest  # 在 Windows 上运行

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up .NET Framework
      uses: microsoft/setup-dotnet@v3
      with:
        dotnet-version: '4.7.2'

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Run Python script to update version
      run: |
        python update_version.py  # 运行更新版本号的 Python 脚本

    - name: Build the project
      run: |
        msbuild YourProject.sln /p:Configuration=Release  # 编译项目，替换为你的项目解决方案文件

    - name: Get version from AssemblyInfo.cs
      id: version
      run: |
        # 从 AssemblyInfo.cs 中提取版本号
        VERSION=$(grep -oP '(?<=\[assembly: AssemblyVersion\(")(\d+\.\d+\.\d+\.\d+)(?="\)\])' YourProject/Properties/AssemblyInfo.cs)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Get commit logs
      id: commits
      run: |
        # 获取提交记录，排除更新版本号的提交
        COMMITS=$(git log --since="1 day ago" --pretty=format:"- %s (#%h, @%an)")
        echo "COMMITS=$COMMITS" >> $GITHUB_ENV

    - name: Create Release
      uses: ghcr.io/softprops/action-gh-release@v1
      with:
        files: |
          YourProject/bin/Release/YourApp.exe  # 发布的文件，替换为实际的文件路径
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release Tag
      run: |
        VERSION_TAG="v${{ env.VERSION }}"
        git tag $VERSION_TAG
        git push origin $VERSION_TAG

    - name: Publish release with commit logs
      run: |
        VERSION_TAG="v${{ env.VERSION }}"
        COMMITS="${{ env.COMMITS }}"
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"tag_name\":\"$VERSION_TAG\",\"name\":\"$VERSION_TAG\",\"body\":\"# $VERSION_TAG\n\n## Commit Logs\n$COMMITS\"}" \
          "https://api.github.com/repos/${{ github.repository }}/releases"
