name: .NET Build and Release (Self-Contained)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0' # 选择你项目的 .NET 版本

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test --configuration Release

  versioning:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current version
        id: version
        run: |
          VERSION=$(grep -oP '(?<=<Version>)(.*?)(?=</Version>)' MyProject/MyProject.csproj)
          echo "Current Version: $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Increment version
        id: increment_version
        run: |
          VERSION=${{ steps.version.outputs.version }}
          VERSION_PARTS=(${VERSION//./ })
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          echo "New Version: $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Update version in .csproj
        run: |
          VERSION=${{ steps.increment_version.outputs.version }}
          sed -i "s/<Version>.*<\/Version>/<Version>$VERSION<\/Version>/" MyProject/MyProject.csproj
          echo "Updated version to $VERSION in csproj"

      - name: Commit version change
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add MyProject/MyProject.csproj
          git commit -m "Update version to ${{ steps.increment_version.outputs.version }}"
          git push

  release:
    runs-on: windows-latest
    needs: versioning
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: Publish application (Self-contained)
        run: |
          dotnet publish --configuration Release --self-contained --runtime win-x64 --output ./publish
          echo "Published as self-contained application."

      - name: Create release artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-app-${{ needs.versioning.outputs.version }}
          path: ./publish

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
